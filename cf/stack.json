{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Serverless app consisting of multiple Lambda functions, a DynamoDB table and a statically hosted website",
    "Parameters": {
        "ProjectName": {
            "Description": "Project name, used in tags to identify resources",
            "Type": "String",
            "Default": "my-project",
            "AllowedPattern": "[a-z]{1}[-a-z0-9]*",
            "ConstraintDescription": "Must start with a lowercase character and contain only lowercase letters, numbers and hyphens"
        },
        "FacebookAppId": {
            "Description": "Facebook app used for user authentication",
            "Type": "String",
            "AllowedPattern": "[0-9]*",
            "ConstraintDescription": "Must be a sequence of numbers"
        },
        "GoogleAPIKey": {
            "Description": "Google API key to access Google Cloud Vision API",
            "Type": "String"
        },
        "DynamoDBReadCap": {
            "Description": "Read capacity units to reserve for job status table",
            "Type": "Number",
            "Default": "1"
        },
        "DynamoDBWriteCap": {
            "Description": "Write capacity units to reserve for job status table",
            "Type": "Number",
            "Default": "1"
        }
    },
    "Resources": {
        "UploadBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "Tags": [
                    {
                        "Key": "ProjectName",
                        "Value": {"Ref": "ProjectName"}
                    }
                ]
            }
        },
        "JobStatusTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName" : "userId",
                        "AttributeType" : "S"
                    },
                    {
                        "AttributeName" : "jobId",
                        "AttributeType" : "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "userId",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "jobId",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {"Ref": "DynamoDBReadCap"},
                    "WriteCapacityUnits": {"Ref": "DynamoDBWriteCap"}
                },
                "Tags": [
                    {
                        "Key": "ProjectName",
                        "Value": {"Ref": "ProjectName"}
                    }
                ]
            }
        },
        "BucketFBUploadPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Allow writing objects into the file upload bucket",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "s3:PutObject",
                                "s3:PutObjectAcl"
                            ],
                            "Resource": [
                                {"Fn::Join": ["", [{"Fn::GetAtt": ["UploadBucket", "Arn"]}, "/fb_${graph.facebook.com:id}/*"]]}
                            ],
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "s3:ListBucket"
                            ],
                            "Resource": [
                                {"Fn::GetAtt": ["UploadBucket", "Arn"]}
                            ],
                            "Effect": "Allow",
                            "Condition": {
                                "StringEquals": {
                                    "s3:prefix": "fb_${graph.facebook.com:id}"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "BucketFBIdentityRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "graph.facebook.com"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                                "StringEquals": {
                                    "graph.facebook.com:app_id": {"Ref": "FacebookAppId"}
                                }
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    {"Ref": "BucketFBUploadPolicy"}
                ]
            }
        },
        "LogStreamPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Generic policy to grant LogStream access to Lambda functions",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "arn:aws:logs:*:*:*"
                        }
                    ]
                }
            }
        },
        "DynamoDBPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "DynamoDB access for API functions",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Stmt1507424001000",
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:DeleteItem",
                                "dynamodb:DeleteTable",
                                "dynamodb:DescribeLimits",
                                "dynamodb:DescribeStream",
                                "dynamodb:DescribeTable",
                                "dynamodb:GetItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:ListStreams",
                                "dynamodb:PutItem",
                                "dynamodb:Query",
                                "dynamodb:Scan",
                                "dynamodb:UpdateItem"
                            ],
                            "Resource": [
                                {"Fn::GetAtt": ["JobStatusTable", "Arn"]}
                            ]
                        }
                    ]
                }
            }
        },
        "BucketGetObjectPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Generic policy to grant LogStream access to Lambda functions",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Stmt1508039776000",
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                {"Fn::Join": ["", [{"Fn::GetAtt": ["UploadBucket", "Arn"]}, "/*"]]}
                            ]
                        }
                    ]
                }
            }
        },
        "CreateJobFnRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                },
                "ManagedPolicyArns": [
                    {"Ref": "LogStreamPolicy"},
                    {"Ref": "DynamoDBPolicy"},
                    {"Ref": "InvokeDetectTextFnPolicy"}
                ]
            }
        },
        "CreateJobFn": {
            "Type" : "AWS::Lambda::Function",
            "Properties": {
                "Code": "../lambda/PollinatorCreateJob",
                "Environment": {
                    "Variables": {
                        "BUCKET_NAME": {"Ref": "UploadBucket"},
                        "TABLE_NAME": {"Ref": "JobStatusTable"},
                        "TEXT_DETECTION_FN_NAME": {"Ref": "DetectTextFn"}
                    }
                },
                "Handler": "index.handler",
                "Role": {"Fn::GetAtt": ["CreateJobFnRole", "Arn"]},
                "Runtime": "nodejs6.10",
                "Tags": [
                    {
                        "Key": "ProjectName",
                        "Value": {"Ref": "ProjectName"}
                    }
                ],
                "Timeout": "25"
            }
        },
        "InvokeDetectTextFnPolicy": {
            "Type" : "AWS::IAM::ManagedPolicy",
            "Description": "Permission to invoke text detection function",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Stmt1508053766000",
                            "Effect": "Allow",
                            "Action": [
                                "lambda:InvokeAsync",
                                "lambda:InvokeFunction"
                            ],
                            "Resource": [
                                {"Fn::GetAtt": ["DetectTextFn", "Arn"]}
                            ]
                        }
                    ]
                }
            }
        },
        "DetectTextFnRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                      }
                    ]
                },
                "ManagedPolicyArns": [
                    {"Ref": "LogStreamPolicy"},
                    {"Ref": "DynamoDBPolicy"},
                    {"Ref": "BucketGetObjectPolicy"}
                ]
            }
        },
        "DetectTextFn": {
            "Type" : "AWS::Lambda::Function",
            "Properties": {
                "Code": "../lambda/PollinatorDetectText",
                "Environment": {
                    "Variables": {
                        "BUCKET_NAME": {"Ref": "UploadBucket"},
                        "TABLE_NAME": {"Ref": "JobStatusTable"},
                        "GOOGLE_API_KEY": {"Ref": "GoogleAPIKey"},
                        "TEXT_TO_SPEECH_FN_NAME": "##TODO"
                    }
                },
                "Handler": "index.handler",
                "Role": {"Fn::GetAtt": ["DetectTextFnRole", "Arn"]},
                "Runtime": "nodejs6.10",
                "Tags": [
                    {
                        "Key": "ProjectName",
                        "Value": {"Ref": "ProjectName"}
                    }
                ],
                "Timeout": "300"
            }
        }
    },
    "Outputs": {
        "BucketDomainName": {
            "Value": {
                "Fn::GetAtt": ["UploadBucket", "DomainName"]
            }
        }
    }
}
